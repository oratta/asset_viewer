<?php

namespace Tests\Feature;

use App\AssetCategoryMaster;
use App\User;
use App\UserAssetCategory;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\SeedingDatabase;
use Illuminate\Foundation\Testing\RefreshDatabase;

class EditUserAssetTest extends TestCase
{
    use SeedingDatabase;
    use RefreshDatabase;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->user = factory(User::class)->states('withAsset')->create();
    }

    /**
     * @test
     */
    public function should_user_assetのリストをJsonで返却する()
    {

        $this->assertDatabaseHas('user_assets', ['user_id' => $this->user->id]);

        $request = $this->actingAs($this->user)
            ->json('get', route('categorize'));

        $assetCategory = AssetCategoryMaster::where(['section_id',1])->first();
        $uAsset = UserAssetCategory::where(['user_id', 1])->first();
        $expected = [
            'selectInfo' => [
                1 => [$assetCategory->id => $assetCategory->name],
            ],
            'userAssetList' => [
                1 => [
                    'name' => $uAsset->name,
                    'categories' => [
                        1 => $uAsset->assetCategoryMasters()->first()->id,
                    ],
                    'value' => $uAsset->value,
                ]
            ]
        ];

        $request->assertStatus('200');
        $request->assertJson($expected);
    }
}
